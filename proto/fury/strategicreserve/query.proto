syntax = "proto3";
package furysports.xfury.strategicreserve;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

import "xfury/strategicreserve/params.proto";
import "xfury/strategicreserve/reserver.proto";

option go_package = "github.com/playerfury/xfury/x/strategicreserve/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/xfury/strategic-reserve/params";
  }

  // Reserver returns the Reserver value.
  rpc Reserver(QueryReserverRequest) returns (QueryReserverResponse) {
    option (google.api.http).get = "/xfury/strategic-reserve/reserver";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
// Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
// Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryReserverRequest is the request type for the Query/Inflation RPC method.
// Query/Reserver RPC method.
message QueryReserverRequest {}

// QueryReserverResponse is the response type for the Query/Inflation RPC
// method.
// Query/Reserver RPC method.
message QueryReserverResponse {
  // reserver is a holder for sr fund management.
  Reserver reserver = 1;
}
